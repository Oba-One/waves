{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ticket",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_eventName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "synth",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "generator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "synthId",
          "type": "uint256"
        }
      ],
      "name": "SynthMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wavesAddrs",
          "type": "address"
        }
      ],
      "name": "connectWaves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "generateSynth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200201d3803806200201d83398101604081905262000034916200022a565b6040805180820190915260058152640a6b29ca8960db1b602082015281906000620000608382620003b3565b5060016200006f8282620003b3565b50506006805460ff19169055506200008733620000b6565b600780546001600160a01b0319166001600160a01b038516179055620000ad8262000110565b5050506200047f565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200011a62000193565b6001600160a01b038116620001855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200019081620000b6565b50565b6006546001600160a01b03610100909104163314620001f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200017c565b565b80516001600160a01b03811681146200020f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200024057600080fd5b6200024b84620001f7565b925060206200025c818601620001f7565b60408601519093506001600160401b03808211156200027a57600080fd5b818701915087601f8301126200028f57600080fd5b815181811115620002a457620002a462000214565b604051601f8201601f19908116603f01168101908382118183101715620002cf57620002cf62000214565b816040528281528a86848701011115620002e857600080fd5b600093505b828410156200030c5784840186015181850187015292850192620002ed565b60008684830101528096505050505050509250925092565b600181811c908216806200033957607f821691505b6020821081036200035a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ae57600081815260208120601f850160051c81016020861015620003895750805b601f850160051c820191505b81811015620003aa5782815560010162000395565b5050505b505050565b81516001600160401b03811115620003cf57620003cf62000214565b620003e781620003e0845462000324565b8462000360565b602080601f8311600181146200041f5760008415620004065750858301515b600019600386901b1c1916600185901b178555620003aa565b600085815260208120601f198616915b8281101562000450578886015182559484019460019091019084016200042f565b50858210156200046f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b8e806200048f6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b85780639ee24a731161007c5780639ee24a731461025c578063a22cb4651461026f578063b88d4fde14610282578063c87b56dd14610295578063e985e9c5146102a8578063f2fde38b146102bb57600080fd5b806370a082311461020d578063715018a61461022e5780638456cb59146102365780638da5cb5b1461023e57806395d89b411461025457600080fd5b80633ccbc32e116100ff5780633ccbc32e146101cc5780633f4ba83a146101d457806342842e0e146101dc5780635c975abb146101ef5780636352211e146101fa57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806323b872dd146101b9575b600080fd5b61014f61014a366004611656565b6102ce565b60405190151581526020015b60405180910390f35b61016c610320565b60405161015b91906116c3565b61018c6101873660046116d6565b6103b2565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611704565b6103d9565b005b6101b76101c7366004611730565b6104f3565b61018c610524565b6101b76107ed565b6101b76101ea366004611730565b6107ff565b60065460ff1661014f565b61018c6102083660046116d6565b61081a565b61022061021b366004611771565b61087a565b60405190815260200161015b565b6101b7610900565b6101b7610912565b60065461010090046001600160a01b031661018c565b61016c610922565b6101b761026a366004611771565b610931565b6101b761027d36600461179c565b610bac565b6101b76102903660046117eb565b610bbb565b61016c6102a33660046116d6565b610bf3565b61014f6102b63660046118cb565b610c67565b6101b76102c9366004611771565b610c95565b60006001600160e01b031982166380ac58cd60e01b14806102ff57506001600160e01b03198216635b5e139f60e01b145b8061031a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032f906118f9565b80601f016020809104026020016040519081016040528092919081815260200182805461035b906118f9565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bd82610d0e565b506000908152600460205260409020546001600160a01b031690565b60006103e48261081a565b9050806001600160a01b0316836001600160a01b0316036104565760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061047257506104728133610c67565b6104e45760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161044d565b6104ee8383610d6d565b505050565b6104fd3382610ddb565b6105195760405162461bcd60e51b815260040161044d90611933565b6104ee838383610e3a565b600061052e610fd6565b6008546001600160a01b03166105865760405162461bcd60e51b815260206004820152601d60248201527f53796e746847656e3a207761766573206e6f7420636f6e6e6563746564000000604482015260640161044d565b6007546040516370a0823160e01b81523360048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa1580156105d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f79190611981565b116106445760405162461bcd60e51b815260206004820152601960248201527f53796e746847656e3a206d757374206f776e207469636b657400000000000000604482015260640161044d565b3360009081526009602052604090205460ff16156106a45760405162461bcd60e51b815260206004820152601960248201527f53796e746847656e3a20616c726561647920636c61696d656400000000000000604482015260640161044d565b336000908152600960205260408120805460ff191660011790556106c7600a5490565b90507302101dfb77fde026414827fdc604ddaf224f09216106ec600a80546001019055565b6106f6338361101c565b60405163da7323b360e01b8152732d25602551487c3f3354dd80d76d54383a2433586004820152600060248201819052306044830152606482018490526084820181905260c060a483015260c48201819052906001600160a01b0383169063da7323b39060e4016020604051808303816000875af115801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a0919061199a565b604051848152909150309033906001600160a01b038416907f8298cce5bebc0a9d2419469172195bf3eec5f19e56b3584c835554c4312b99ee9060200160405180910390a4935050505090565b6107f5611036565b6107fd611096565b565b6104ee83838360405180602001604052806000815250610bbb565b6000818152600260205260408120546001600160a01b03168061031a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161044d565b60006001600160a01b0382166108e45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161044d565b506001600160a01b031660009081526003602052604090205490565b610908611036565b6107fd60006110e8565b61091a611036565b6107fd611142565b60606001805461032f906118f9565b610939611036565b6008546001600160a01b03161561099c5760405162461bcd60e51b815260206004820152602160248201527f53796e746847656e3a20776176657320616c726561647920636f6e6e656374656044820152601960fa1b606482015260840161044d565b60075460408051636cc25db760e01b8152905183926001600160a01b039081169290841691636cc25db7916004808201926020929091908290030181865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a10919061199a565b6001600160a01b031614610a665760405162461bcd60e51b815260206004820152601960248201527f53796e746847656e3a207469636b6574206d69736d6174636800000000000000604482015260640161044d565b806001600160a01b03166391d14854826001600160a01b031663a217fddf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad79190611981565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d91906119b7565b610b895760405162461bcd60e51b815260206004820152601860248201527f53796e746847656e3a206f776e6572206d69736d617463680000000000000000604482015260640161044d565b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b610bb733838361117f565b5050565b610bc53383610ddb565b610be15760405162461bcd60e51b815260040161044d90611933565b610bed8484848461124d565b50505050565b6060610bfe82610d0e565b6000610c1560408051602081019091526000815290565b90506000815111610c355760405180602001604052806000815250610c60565b80610c3f84611280565b604051602001610c509291906119d4565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610c9d611036565b6001600160a01b038116610d025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161044d565b610d0b816110e8565b50565b6000818152600260205260409020546001600160a01b0316610d0b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161044d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610da28261081a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610de78361081a565b9050806001600160a01b0316846001600160a01b03161480610e0e5750610e0e8185610c67565b80610e325750836001600160a01b0316610e27846103b2565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e4d8261081a565b6001600160a01b031614610eb15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161044d565b6001600160a01b038216610f135760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161044d565b610f1e600082610d6d565b6001600160a01b0383166000908152600360205260408120805460019290610f47908490611a19565b90915550506001600160a01b0382166000908152600360205260408120805460019290610f75908490611a2c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60065460ff16156107fd5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161044d565b610bb7828260405180602001604052806000815250611381565b6006546001600160a01b036101009091041633146107fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161044d565b61109e6113b4565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61114a610fd6565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110cb3390565b816001600160a01b0316836001600160a01b0316036111e05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161044d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611258848484610e3a565b611264848484846113fd565b610bed5760405162461bcd60e51b815260040161044d90611a3f565b6060816000036112a75750506040805180820190915260018152600360fc1b602082015290565b8160005b81156112d157806112bb81611a91565b91506112ca9050600a83611ac0565b91506112ab565b60008167ffffffffffffffff8111156112ec576112ec6117d5565b6040519080825280601f01601f191660200182016040528015611316576020820181803683370190505b5090505b8415610e325761132b600183611a19565b9150611338600a86611ad4565b611343906030611a2c565b60f81b81838151811061135857611358611ae8565b60200101906001600160f81b031916908160001a90535061137a600a86611ac0565b945061131a565b61138b83836114fe565b61139860008484846113fd565b6104ee5760405162461bcd60e51b815260040161044d90611a3f565b60065460ff166107fd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161044d565b60006001600160a01b0384163b156114f357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611441903390899088908890600401611afe565b6020604051808303816000875af192505050801561147c575060408051601f3d908101601f1916820190925261147991810190611b3b565b60015b6114d9573d8080156114aa576040519150601f19603f3d011682016040523d82523d6000602084013e6114af565b606091505b5080516000036114d15760405162461bcd60e51b815260040161044d90611a3f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e32565b506001949350505050565b6001600160a01b0382166115545760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161044d565b6000818152600260205260409020546001600160a01b0316156115b95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161044d565b6001600160a01b03821660009081526003602052604081208054600192906115e2908490611a2c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610d0b57600080fd5b60006020828403121561166857600080fd5b8135610c6081611640565b60005b8381101561168e578181015183820152602001611676565b50506000910152565b600081518084526116af816020860160208601611673565b601f01601f19169290920160200192915050565b602081526000610c606020830184611697565b6000602082840312156116e857600080fd5b5035919050565b6001600160a01b0381168114610d0b57600080fd5b6000806040838503121561171757600080fd5b8235611722816116ef565b946020939093013593505050565b60008060006060848603121561174557600080fd5b8335611750816116ef565b92506020840135611760816116ef565b929592945050506040919091013590565b60006020828403121561178357600080fd5b8135610c60816116ef565b8015158114610d0b57600080fd5b600080604083850312156117af57600080fd5b82356117ba816116ef565b915060208301356117ca8161178e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561180157600080fd5b843561180c816116ef565b9350602085013561181c816116ef565b925060408501359150606085013567ffffffffffffffff8082111561184057600080fd5b818701915087601f83011261185457600080fd5b813581811115611866576118666117d5565b604051601f8201601f19908116603f0116810190838211818310171561188e5761188e6117d5565b816040528281528a60208487010111156118a757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156118de57600080fd5b82356118e9816116ef565b915060208301356117ca816116ef565b600181811c9082168061190d57607f821691505b60208210810361192d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60006020828403121561199357600080fd5b5051919050565b6000602082840312156119ac57600080fd5b8151610c60816116ef565b6000602082840312156119c957600080fd5b8151610c608161178e565b600083516119e6818460208801611673565b8351908301906119fa818360208801611673565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561031a5761031a611a03565b8082018082111561031a5761031a611a03565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611aa357611aa3611a03565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611acf57611acf611aaa565b500490565b600082611ae357611ae3611aaa565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b3190830184611697565b9695505050505050565b600060208284031215611b4d57600080fd5b8151610c608161164056fea26469706673582212201002732ec5c9066d23959008cf2f49a24eb9e245e0b96caea4fb35fce6d46bd464736f6c63430008110033",
    "sourceMap": "517:2100:2:-:0;;;899:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:32;;;;;;;;;;;;-1:-1:-1;;;1390:113:32;;;;977:10:2;;-1:-1:-1;1456:13:32;977:10:2;-1:-1:-1;1456:13:32;:::i;:::-;-1:-1:-1;1479:7:32;:17;1489:7;1479;:17;:::i;:::-;-1:-1:-1;;996:7:27;:15;;-1:-1:-1;;996:15:27;;;-1:-1:-1;936:32:25;719:10:37;936:18:25;:32::i;:::-;1008:6:2::1;:16:::0;;-1:-1:-1;;;;;;1008:16:2::1;-1:-1:-1::0;;;;;1008:16:2;::::1;;::::0;;1034:25:::1;1052:6:::0;1034:17:::1;:25::i;:::-;899:167:::0;;;517:2100;;2433:187:25;2525:6;;;-1:-1:-1;;;;;2541:17:25;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:25;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:25;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:25;;4336:2:44;2161:73:25::1;::::0;::::1;4318:21:44::0;4375:2;4355:18;;;4348:30;4414:34;4394:18;;;4387:62;-1:-1:-1;;;4465:18:44;;;4458:36;4511:19;;2161:73:25::1;;;;;;;;;2244:28;2263:8:::0;2244:18:::1;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;-1:-1:-1;;;;;1273:6:25;;;;;719:10:37;1422:23:25;1414:68;;;;-1:-1:-1;;;1414:68:25;;4743:2:44;1414:68:25;;;4725:21:44;;;4762:18;;;4755:30;4821:34;4801:18;;;4794:62;4873:18;;1414:68:25;4541:356:44;1414:68:25;1359:130::o;14:177:44:-;93:13;;-1:-1:-1;;;;;135:31:44;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1212;426:6;434;442;495:2;483:9;474:7;470:23;466:32;463:52;;;511:1;508;501:12;463:52;534:40;564:9;534:40;:::i;:::-;524:50;;593:2;614:49;659:2;648:9;644:18;614:49;:::i;:::-;707:2;692:18;;686:25;604:59;;-1:-1:-1;;;;;;760:14:44;;;757:34;;;787:1;784;777:12;757:34;825:6;814:9;810:22;800:32;;870:7;863:4;859:2;855:13;851:27;841:55;;892:1;889;882:12;841:55;921:2;915:9;943:2;939;936:10;933:36;;;949:18;;:::i;:::-;1024:2;1018:9;992:2;1078:13;;-1:-1:-1;;1074:22:44;;;1098:2;1070:31;1066:40;1054:53;;;1122:18;;;1142:22;;;1119:46;1116:72;;;1168:18;;:::i;:::-;1208:10;1204:2;1197:22;1243:2;1235:6;1228:18;1283:7;1278:2;1273;1269;1265:11;1261:20;1258:33;1255:53;;;1304:1;1301;1294:12;1255:53;1326:1;1317:10;;1336:129;1350:2;1347:1;1344:9;1336:129;;;1438:10;;;1434:19;;1428:26;1407:14;;;1403:23;;1396:59;1361:10;;;;1336:129;;;1507:1;1502:2;1497;1489:6;1485:15;1481:24;1474:35;1528:6;1518:16;;;;;;;;328:1212;;;;;:::o;1545:380::-;1624:1;1620:12;;;;1667;;;1688:61;;1742:4;1734:6;1730:17;1720:27;;1688:61;1795:2;1787:6;1784:14;1764:18;1761:38;1758:161;;1841:10;1836:3;1832:20;1829:1;1822:31;1876:4;1873:1;1866:15;1904:4;1901:1;1894:15;1758:161;;1545:380;;;:::o;2056:545::-;2158:2;2153:3;2150:11;2147:448;;;2194:1;2219:5;2215:2;2208:17;2264:4;2260:2;2250:19;2334:2;2322:10;2318:19;2315:1;2311:27;2305:4;2301:38;2370:4;2358:10;2355:20;2352:47;;;-1:-1:-1;2393:4:44;2352:47;2448:2;2443:3;2439:12;2436:1;2432:20;2426:4;2422:31;2412:41;;2503:82;2521:2;2514:5;2511:13;2503:82;;;2566:17;;;2547:1;2536:13;2503:82;;;2507:3;;;2147:448;2056:545;;;:::o;2777:1352::-;2897:10;;-1:-1:-1;;;;;2919:30:44;;2916:56;;;2952:18;;:::i;:::-;2981:97;3071:6;3031:38;3063:4;3057:11;3031:38;:::i;:::-;3025:4;2981:97;:::i;:::-;3133:4;;3197:2;3186:14;;3214:1;3209:663;;;;3916:1;3933:6;3930:89;;;-1:-1:-1;3985:19:44;;;3979:26;3930:89;-1:-1:-1;;2734:1:44;2730:11;;;2726:24;2722:29;2712:40;2758:1;2754:11;;;2709:57;4032:81;;3179:944;;3209:663;2003:1;1996:14;;;2040:4;2027:18;;-1:-1:-1;;3245:20:44;;;3363:236;3377:7;3374:1;3371:14;3363:236;;;3466:19;;;3460:26;3445:42;;3558:27;;;;3526:1;3514:14;;;;3393:19;;3363:236;;;3367:3;3627:6;3618:7;3615:19;3612:201;;;3688:19;;;3682:26;-1:-1:-1;;3771:1:44;3767:14;;;3783:3;3763:24;3759:37;3755:42;3740:58;3725:74;;3612:201;-1:-1:-1;;;;;3859:1:44;3843:14;;;3839:22;3826:36;;-1:-1:-1;2777:1352:44:o;4541:356::-;517:2100:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b85780639ee24a731161007c5780639ee24a731461025c578063a22cb4651461026f578063b88d4fde14610282578063c87b56dd14610295578063e985e9c5146102a8578063f2fde38b146102bb57600080fd5b806370a082311461020d578063715018a61461022e5780638456cb59146102365780638da5cb5b1461023e57806395d89b411461025457600080fd5b80633ccbc32e116100ff5780633ccbc32e146101cc5780633f4ba83a146101d457806342842e0e146101dc5780635c975abb146101ef5780636352211e146101fa57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806323b872dd146101b9575b600080fd5b61014f61014a366004611656565b6102ce565b60405190151581526020015b60405180910390f35b61016c610320565b60405161015b91906116c3565b61018c6101873660046116d6565b6103b2565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611704565b6103d9565b005b6101b76101c7366004611730565b6104f3565b61018c610524565b6101b76107ed565b6101b76101ea366004611730565b6107ff565b60065460ff1661014f565b61018c6102083660046116d6565b61081a565b61022061021b366004611771565b61087a565b60405190815260200161015b565b6101b7610900565b6101b7610912565b60065461010090046001600160a01b031661018c565b61016c610922565b6101b761026a366004611771565b610931565b6101b761027d36600461179c565b610bac565b6101b76102903660046117eb565b610bbb565b61016c6102a33660046116d6565b610bf3565b61014f6102b63660046118cb565b610c67565b6101b76102c9366004611771565b610c95565b60006001600160e01b031982166380ac58cd60e01b14806102ff57506001600160e01b03198216635b5e139f60e01b145b8061031a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032f906118f9565b80601f016020809104026020016040519081016040528092919081815260200182805461035b906118f9565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bd82610d0e565b506000908152600460205260409020546001600160a01b031690565b60006103e48261081a565b9050806001600160a01b0316836001600160a01b0316036104565760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061047257506104728133610c67565b6104e45760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161044d565b6104ee8383610d6d565b505050565b6104fd3382610ddb565b6105195760405162461bcd60e51b815260040161044d90611933565b6104ee838383610e3a565b600061052e610fd6565b6008546001600160a01b03166105865760405162461bcd60e51b815260206004820152601d60248201527f53796e746847656e3a207761766573206e6f7420636f6e6e6563746564000000604482015260640161044d565b6007546040516370a0823160e01b81523360048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa1580156105d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f79190611981565b116106445760405162461bcd60e51b815260206004820152601960248201527f53796e746847656e3a206d757374206f776e207469636b657400000000000000604482015260640161044d565b3360009081526009602052604090205460ff16156106a45760405162461bcd60e51b815260206004820152601960248201527f53796e746847656e3a20616c726561647920636c61696d656400000000000000604482015260640161044d565b336000908152600960205260408120805460ff191660011790556106c7600a5490565b90507302101dfb77fde026414827fdc604ddaf224f09216106ec600a80546001019055565b6106f6338361101c565b60405163da7323b360e01b8152732d25602551487c3f3354dd80d76d54383a2433586004820152600060248201819052306044830152606482018490526084820181905260c060a483015260c48201819052906001600160a01b0383169063da7323b39060e4016020604051808303816000875af115801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a0919061199a565b604051848152909150309033906001600160a01b038416907f8298cce5bebc0a9d2419469172195bf3eec5f19e56b3584c835554c4312b99ee9060200160405180910390a4935050505090565b6107f5611036565b6107fd611096565b565b6104ee83838360405180602001604052806000815250610bbb565b6000818152600260205260408120546001600160a01b03168061031a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161044d565b60006001600160a01b0382166108e45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161044d565b506001600160a01b031660009081526003602052604090205490565b610908611036565b6107fd60006110e8565b61091a611036565b6107fd611142565b60606001805461032f906118f9565b610939611036565b6008546001600160a01b03161561099c5760405162461bcd60e51b815260206004820152602160248201527f53796e746847656e3a20776176657320616c726561647920636f6e6e656374656044820152601960fa1b606482015260840161044d565b60075460408051636cc25db760e01b8152905183926001600160a01b039081169290841691636cc25db7916004808201926020929091908290030181865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a10919061199a565b6001600160a01b031614610a665760405162461bcd60e51b815260206004820152601960248201527f53796e746847656e3a207469636b6574206d69736d6174636800000000000000604482015260640161044d565b806001600160a01b03166391d14854826001600160a01b031663a217fddf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad79190611981565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d91906119b7565b610b895760405162461bcd60e51b815260206004820152601860248201527f53796e746847656e3a206f776e6572206d69736d617463680000000000000000604482015260640161044d565b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b610bb733838361117f565b5050565b610bc53383610ddb565b610be15760405162461bcd60e51b815260040161044d90611933565b610bed8484848461124d565b50505050565b6060610bfe82610d0e565b6000610c1560408051602081019091526000815290565b90506000815111610c355760405180602001604052806000815250610c60565b80610c3f84611280565b604051602001610c509291906119d4565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610c9d611036565b6001600160a01b038116610d025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161044d565b610d0b816110e8565b50565b6000818152600260205260409020546001600160a01b0316610d0b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161044d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610da28261081a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610de78361081a565b9050806001600160a01b0316846001600160a01b03161480610e0e5750610e0e8185610c67565b80610e325750836001600160a01b0316610e27846103b2565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e4d8261081a565b6001600160a01b031614610eb15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161044d565b6001600160a01b038216610f135760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161044d565b610f1e600082610d6d565b6001600160a01b0383166000908152600360205260408120805460019290610f47908490611a19565b90915550506001600160a01b0382166000908152600360205260408120805460019290610f75908490611a2c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60065460ff16156107fd5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161044d565b610bb7828260405180602001604052806000815250611381565b6006546001600160a01b036101009091041633146107fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161044d565b61109e6113b4565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61114a610fd6565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110cb3390565b816001600160a01b0316836001600160a01b0316036111e05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161044d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611258848484610e3a565b611264848484846113fd565b610bed5760405162461bcd60e51b815260040161044d90611a3f565b6060816000036112a75750506040805180820190915260018152600360fc1b602082015290565b8160005b81156112d157806112bb81611a91565b91506112ca9050600a83611ac0565b91506112ab565b60008167ffffffffffffffff8111156112ec576112ec6117d5565b6040519080825280601f01601f191660200182016040528015611316576020820181803683370190505b5090505b8415610e325761132b600183611a19565b9150611338600a86611ad4565b611343906030611a2c565b60f81b81838151811061135857611358611ae8565b60200101906001600160f81b031916908160001a90535061137a600a86611ac0565b945061131a565b61138b83836114fe565b61139860008484846113fd565b6104ee5760405162461bcd60e51b815260040161044d90611a3f565b60065460ff166107fd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161044d565b60006001600160a01b0384163b156114f357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611441903390899088908890600401611afe565b6020604051808303816000875af192505050801561147c575060408051601f3d908101601f1916820190925261147991810190611b3b565b60015b6114d9573d8080156114aa576040519150601f19603f3d011682016040523d82523d6000602084013e6114af565b606091505b5080516000036114d15760405162461bcd60e51b815260040161044d90611a3f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e32565b506001949350505050565b6001600160a01b0382166115545760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161044d565b6000818152600260205260409020546001600160a01b0316156115b95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161044d565b6001600160a01b03821660009081526003602052604081208054600192906115e2908490611a2c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610d0b57600080fd5b60006020828403121561166857600080fd5b8135610c6081611640565b60005b8381101561168e578181015183820152602001611676565b50506000910152565b600081518084526116af816020860160208601611673565b601f01601f19169290920160200192915050565b602081526000610c606020830184611697565b6000602082840312156116e857600080fd5b5035919050565b6001600160a01b0381168114610d0b57600080fd5b6000806040838503121561171757600080fd5b8235611722816116ef565b946020939093013593505050565b60008060006060848603121561174557600080fd5b8335611750816116ef565b92506020840135611760816116ef565b929592945050506040919091013590565b60006020828403121561178357600080fd5b8135610c60816116ef565b8015158114610d0b57600080fd5b600080604083850312156117af57600080fd5b82356117ba816116ef565b915060208301356117ca8161178e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561180157600080fd5b843561180c816116ef565b9350602085013561181c816116ef565b925060408501359150606085013567ffffffffffffffff8082111561184057600080fd5b818701915087601f83011261185457600080fd5b813581811115611866576118666117d5565b604051601f8201601f19908116603f0116810190838211818310171561188e5761188e6117d5565b816040528281528a60208487010111156118a757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156118de57600080fd5b82356118e9816116ef565b915060208301356117ca816116ef565b600181811c9082168061190d57607f821691505b60208210810361192d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60006020828403121561199357600080fd5b5051919050565b6000602082840312156119ac57600080fd5b8151610c60816116ef565b6000602082840312156119c957600080fd5b8151610c608161178e565b600083516119e6818460208801611673565b8351908301906119fa818360208801611673565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561031a5761031a611a03565b8082018082111561031a5761031a611a03565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611aa357611aa3611a03565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611acf57611acf611aaa565b500490565b600082611ae357611ae3611aaa565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b3190830184611697565b9695505050505050565b600060208284031215611b4d57600080fd5b8151610c608161164056fea26469706673582212201002732ec5c9066d23959008cf2f49a24eb9e245e0b96caea4fb35fce6d46bd464736f6c63430008110033",
    "sourceMap": "517:2100:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:32;;;;;;:::i;:::-;;:::i;:::-;;;565:14:44;;558:22;540:41;;528:2;513:18;1570:300:32;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:44;;;1679:51;;1667:2;1652:18;3935:167:32;1533:203:44;3467:407:32;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;:::i;:::-;;:::i;1478:999:2:-;;;:::i;2550:65::-;;;:::i;5005:179:32:-;;;;;;:::i;:::-;;:::i;1615:84:27:-;1685:7;;;;1615:84;;2190:218:32;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;3056:25:44;;;3044:2;3029:18;1929:204:32;2910:177:44;1831:101:25;;;:::i;2483:61:2:-;;;:::i;1201:85:25:-;1273:6;;;;;-1:-1:-1;;;;;1273:6:25;1201:85;;2632:102:32;;;:::i;1072:400:2:-;;;;;;:::i;:::-;;:::i;4169:153:32:-;;;;;;:::i;:::-;;:::i;5250:315::-;;;;;;:::i;:::-;;:::i;2800:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;2081:198:25:-;;;;;;:::i;:::-;;:::i;1570:300:32:-;1672:4;-1:-1:-1;;;;;;1707:40:32;;-1:-1:-1;;;1707:40:32;;:104;;-1:-1:-1;;;;;;;1763:48:32;;-1:-1:-1;;;1763:48:32;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:42;;;1827:36:32;1688:175;1570:300;-1:-1:-1;;1570:300:32:o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:32;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:32;;3935:167::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;-1:-1:-1;;;;;3604:11:32;:2;-1:-1:-1;;;;;3604:11:32;;3596:57;;;;-1:-1:-1;;;3596:57:32;;5985:2:44;3596:57:32;;;5967:21:44;6024:2;6004:18;;;5997:30;6063:34;6043:18;;;6036:62;-1:-1:-1;;;6114:18:44;;;6107:31;6155:19;;3596:57:32;;;;;;;;;719:10:37;-1:-1:-1;;;;;3685:21:32;;;;:62;;-1:-1:-1;3710:37:32;3727:5;719:10:37;4388:162:32;:::i;3710:37::-;3664:171;;;;-1:-1:-1;;;3664:171:32;;6387:2:44;3664:171:32;;;6369:21:44;6426:2;6406:18;;;6399:30;6465:34;6445:18;;;6438:62;6536:32;6516:18;;;6509:60;6586:19;;3664:171:32;6185:426:44;3664:171:32;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;4612:327::-;4801:41;719:10:37;4834:7:32;4801:18;:41::i;:::-;4793:100;;;;-1:-1:-1;;;4793:100:32;;;;;;;:::i;:::-;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;1478:999:2:-;1535:7;1239:19:27;:17;:19::i;:::-;1562:10:2::1;::::0;-1:-1:-1;;;;;1562:10:2::1;1554:66;;;::::0;-1:-1:-1;;;1554:66:2;;7233:2:44;1554:66:2::1;::::0;::::1;7215:21:44::0;7272:2;7252:18;;;7245:30;7311:31;7291:18;;;7284:59;7360:18;;1554:66:2::1;7031:353:44::0;1554:66:2::1;1661:6;::::0;1687:36:::1;::::0;-1:-1:-1;;;1687:36:2;;1712:10:::1;1687:36;::::0;::::1;1679:51:44::0;-1:-1:-1;;;;;1661:6:2;;::::1;::::0;1630:21:::1;::::0;1661:6;;1687:24:::1;::::0;1652:18:44;;1687:36:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;1679:78;;;::::0;-1:-1:-1;;;1679:78:2;;7780:2:44;1679:78:2::1;::::0;::::1;7762:21:44::0;7819:2;7799:18;;;7792:30;7858:27;7838:18;;;7831:55;7903:18;;1679:78:2::1;7578:349:44::0;1679:78:2::1;1797:10;1776:32;::::0;;;:20:::1;:32;::::0;;;;;::::1;;1775:33;1767:71;;;::::0;-1:-1:-1;;;1767:71:2;;8134:2:44;1767:71:2::1;::::0;::::1;8116:21:44::0;8173:2;8153:18;;;8146:30;8212:27;8192:18;;;8185:55;8257:18;;1767:71:2::1;7932:349:44::0;1767:71:2::1;1870:10;1849:32;::::0;;;:20:::1;:32;::::0;;;;:39;;-1:-1:-1;;1849:39:2::1;1884:4;1849:39;::::0;;1916:25:::1;:15;918:14:38::0;;827:112;1916:25:2::1;1898:43:::0;-1:-1:-1;307:42:0::1;2039:27:2;:15;1032:19:38::0;;1050:1;1032:19;;;945:123;2039:27:2::1;2076:30;2086:10;2098:7;2076:9;:30::i;:::-;2132:95;::::0;-1:-1:-1;;;2132:95:2;;115:42:0::1;2132:95:2;::::0;::::1;8663:34:44::0;2116:13:2::1;8713:18:44::0;;;8706:34;;;2205:4:2::1;8756:18:44::0;;;8749:43;8808:18;;;8801:34;;;8851:19;;;8844:35;;;8916:3;8895:19;;;8888:32;8936:19;;;8929:30;;;2116:13:2;-1:-1:-1;;;;;2132:29:2;::::1;::::0;::::1;::::0;8976:19:44;;2132:95:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2393:54;::::0;3056:25:44;;;2116:111:2;;-1:-1:-1;2432:4:2::1;::::0;2412:10:::1;::::0;-1:-1:-1;;;;;2393:54:2;::::1;::::0;::::1;::::0;3044:2:44;3029:18;2393:54:2::1;;;;;;;2465:5:::0;-1:-1:-1;;;;1478:999:2;:::o;2550:65::-;1094:13:25;:11;:13::i;:::-;2598:10:2::1;:8;:10::i;:::-;2550:65::o:0;5005:179:32:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;2190:218::-;2262:7;2297:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2297:16:32;;2323:56;;;;-1:-1:-1;;;2323:56:32;;9464:2:44;2323:56:32;;;9446:21:44;9503:2;9483:18;;;9476:30;-1:-1:-1;;;9522:18:44;;;9515:54;9586:18;;2323:56:32;9262:348:44;1929:204:32;2001:7;-1:-1:-1;;;;;2028:19:32;;2020:73;;;;-1:-1:-1;;;2020:73:32;;9817:2:44;2020:73:32;;;9799:21:44;9856:2;9836:18;;;9829:30;9895:34;9875:18;;;9868:62;-1:-1:-1;;;9946:18:44;;;9939:39;9995:19;;2020:73:32;9615:405:44;2020:73:32;-1:-1:-1;;;;;;2110:16:32;;;;;:9;:16;;;;;;;1929:204::o;1831:101:25:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;2483:61:2:-:0;1094:13:25;:11;:13::i;:::-;2529:8:2::1;:6;:8::i;2632:102:32:-:0;2688:13;2720:7;2713:14;;;;;:::i;1072:400:2:-;1094:13:25;:11;:13::i;:::-;1152:10:2::1;::::0;-1:-1:-1;;;;;1152:10:2::1;:24:::0;1144:70:::1;;;::::0;-1:-1:-1;;;1144:70:2;;10227:2:44;1144:70:2::1;::::0;::::1;10209:21:44::0;10266:2;10246:18;;;10239:30;10305:34;10285:18;;;10278:62;-1:-1:-1;;;10356:18:44;;;10349:31;10397:19;;1144:70:2::1;10025:397:44::0;1144:70:2::1;1294:6;::::0;1276:14:::1;::::0;;-1:-1:-1;;;1276:14:2;;;;1245:11;;-1:-1:-1;;;;;1294:6:2;;::::1;::::0;1276:12;;::::1;::::0;::::1;::::0;:14:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:12;:14:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1276:24:2::1;;1268:62;;;::::0;-1:-1:-1;;;1268:62:2;;10629:2:44;1268:62:2::1;::::0;::::1;10611:21:44::0;10668:2;10648:18;;;10641:30;10707:27;10687:18;;;10680:55;10752:18;;1268:62:2::1;10427:349:44::0;1268:62:2::1;1348:5;-1:-1:-1::0;;;;;1348:13:2::1;;1362:5;-1:-1:-1::0;;;;;1362:24:2::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1348:53;::::0;-1:-1:-1;;;;;;1348:53:2::1;::::0;;;;;;::::1;::::0;::::1;11144:25:44::0;;;;1390:10:2::1;11185:18:44::0;;;11178:60;11117:18;;1348:53:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1340:90;;;::::0;-1:-1:-1;;;1340:90:2;;11701:2:44;1340:90:2::1;::::0;::::1;11683:21:44::0;11740:2;11720:18;;;11713:30;11779:26;11759:18;;;11752:54;11823:18;;1340:90:2::1;11499:348:44::0;1340:90:2::1;-1:-1:-1::0;1441:10:2::1;:24:::0;;-1:-1:-1;;;;;;1441:24:2::1;-1:-1:-1::0;;;;;1441:24:2;;;::::1;::::0;;;::::1;::::0;;1072:400::o;4169:153:32:-;4263:52;719:10:37;4296:8:32;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;719:10:37;5451:7:32;5418:18;:41::i;:::-;5410:100;;;;-1:-1:-1;;;5410:100:32;;;;;;;:::i;:::-;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;3394:9;;;;;;;;;-1:-1:-1;3394:9:32;;;3318:92;2956:10;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;2800:276;-1:-1:-1;;;2800:276:32:o;4388:162::-;-1:-1:-1;;;;;4508:25:32;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;2081:198:25:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:25;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:25;;12555:2:44;2161:73:25::1;::::0;::::1;12537:21:44::0;12594:2;12574:18;;;12567:30;12633:34;12613:18;;;12606:62;-1:-1:-1;;;12684:18:44;;;12677:36;12730:19;;2161:73:25::1;12353:402:44::0;2161:73:25::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;11657:133:32:-;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:32;11730:53;;;;-1:-1:-1;;;11730:53:32;;9464:2:44;11730:53:32;;;9446:21:44;9503:2;9483:18;;;9476:30;-1:-1:-1;;;9522:18:44;;;9515:54;9586:18;;11730:53:32;9262:348:44;10959:171:32;11033:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11033:29:32;-1:-1:-1;;;;;11033:29:32;;;;;;;;:24;;11086:23;11033:24;11086:14;:23::i;:::-;-1:-1:-1;;;;;11077:46:32;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;-1:-1:-1;;;;;7483:16:32;:7;-1:-1:-1;;;;;7483:16:32;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:87;;;;7563:7;-1:-1:-1;;;;;7539:31:32;:20;7551:7;7539:11;:20::i;:::-;-1:-1:-1;;;;;7539:31:32;;7483:87;7475:96;7317:261;-1:-1:-1;;;;7317:261:32:o;10242:605::-;10396:4;-1:-1:-1;;;;;10369:31:32;:23;10384:7;10369:14;:23::i;:::-;-1:-1:-1;;;;;10369:31:32;;10361:81;;;;-1:-1:-1;;;10361:81:32;;12962:2:44;10361:81:32;;;12944:21:44;13001:2;12981:18;;;12974:30;13040:34;13020:18;;;13013:62;-1:-1:-1;;;13091:18:44;;;13084:35;13136:19;;10361:81:32;12760:401:44;10361:81:32;-1:-1:-1;;;;;10460:16:32;;10452:65;;;;-1:-1:-1;;;10452:65:32;;13368:2:44;10452:65:32;;;13350:21:44;13407:2;13387:18;;;13380:30;13446:34;13426:18;;;13419:62;-1:-1:-1;;;13497:18:44;;;13490:34;13541:19;;10452:65:32;13166:400:44;10452:65:32;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;-1:-1:-1;;;;;10669:15:32;;;;;;:9;:15;;;;;:20;;10688:1;;10669:15;:20;;10688:1;;10669:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10699:13:32;;;;;;:9;:13;;;;;:18;;10716:1;;10699:13;:18;;10716:1;;10699:18;:::i;:::-;;;;-1:-1:-1;;10727:16:32;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10727:21:32;-1:-1:-1;;;;;10727:21:32;;;;;;;;;10764:27;;10727:16;;10764:27;;;;;;;3537:337;3467:407;;:::o;1767:106:27:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:27;;14168:2:44;1828:38:27;;;14150:21:44;14207:2;14187:18;;;14180:30;-1:-1:-1;;;14226:18:44;;;14219:46;14282:18;;1828:38:27;13966:340:44;7908:108:32;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;1359:130:25:-;1273:6;;-1:-1:-1;;;;;1273:6:25;;;;;719:10:37;1422:23:25;1414:68;;;;-1:-1:-1;;;1414:68:25;;14513:2:44;1414:68:25;;;14495:21:44;;;14532:18;;;14525:30;14591:34;14571:18;;;14564:62;14643:18;;1414:68:25;14311:356:44;2433:117:27;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:27::1;::::0;;2521:22:::1;719:10:37::0;2530:12:27::1;2521:22;::::0;-1:-1:-1;;;;;1697:32:44;;;1679:51;;1667:2;1652:18;2521:22:27::1;;;;;;;2433:117::o:0;:187:25:-;2525:6;;;-1:-1:-1;;;;;2541:17:25;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:25;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;2186:115:27:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:27::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:37::0;;640:96;11266:307:32;11416:8;-1:-1:-1;;;;;11407:17:32;:5;-1:-1:-1;;;;;11407:17:32;;11399:55;;;;-1:-1:-1;;;11399:55:32;;14874:2:44;11399:55:32;;;14856:21:44;14913:2;14893:18;;;14886:30;14952:27;14932:18;;;14925:55;14997:18;;11399:55:32;14672:349:44;11399:55:32;-1:-1:-1;;;;;11464:25:32;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11464:46:32;;;;;;;;;;11525:41;;540::44;;;11525::32;;513:18:44;11525:41:32;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;-1:-1:-1;;;6614:110:32;;;;;;;:::i;392:703:39:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:39;;;;;;;;;;;;-1:-1:-1;;;691:10:39;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:39;;-1:-1:-1;837:2:39;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:39;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:39;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:39;;;;;;;;-1:-1:-1;1036:11:39;1045:2;1036:11;;:::i;:::-;;;908:150;;8237:309:32;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;-1:-1:-1;;;8389:150:32;;;;;;;:::i;1945:106:27:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:27;;16293:2:44;2003:41:27;;;16275:21:44;16332:2;16312:18;;;16305:30;-1:-1:-1;;;16351:18:44;;;16344:50;16411:18;;2003:41:27;16091:344:44;12342:831:32;12491:4;-1:-1:-1;;;;;12511:13:32;;1465:19:36;:23;12507:660:32;;12546:71;;-1:-1:-1;;;12546:71:32;;-1:-1:-1;;;;;12546:36:32;;;;;:71;;719:10:37;;12597:4:32;;12603:7;;12612:4;;12546:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12546:71:32;;;;;;;;-1:-1:-1;;12546:71:32;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12784:6;:13;12801:1;12784:18;12780:321;;12826:60;;-1:-1:-1;;;12826:60:32;;;;;;;:::i;12780:321::-;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;-1:-1:-1;;;;;;12667:51:32;-1:-1:-1;;;12667:51:32;;-1:-1:-1;12660:58:32;;12507:660;-1:-1:-1;13152:4:32;12342:831;;;;;;:::o;8868:427::-;-1:-1:-1;;;;;8947:16:32;;8939:61;;;;-1:-1:-1;;;8939:61:32;;17390:2:44;8939:61:32;;;17372:21:44;;;17409:18;;;17402:30;17468:34;17448:18;;;17441:62;17520:18;;8939:61:32;17188:356:44;8939:61:32;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:32;:30;9010:58;;;;-1:-1:-1;;;9010:58:32;;17751:2:44;9010:58:32;;;17733:21:44;17790:2;17770:18;;;17763:30;17829;17809:18;;;17802:58;17877:18;;9010:58:32;17549:352:44;9010:58:32;-1:-1:-1;;;;;9135:13:32;;;;;;:9;:13;;;;;:18;;9152:1;;9135:13;:18;;9152:1;;9135:18;:::i;:::-;;;;-1:-1:-1;;9163:16:32;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9163:21:32;-1:-1:-1;;;;;9163:21:32;;;;;;;;9200:33;;9163:16;;;9200:33;;9163:16;;9200:33;4169:153;;:::o;14:131:44:-;-1:-1:-1;;;;;;88:32:44;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:44;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:44;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:44:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:44;;1348:180;-1:-1:-1;1348:180:44:o;1741:131::-;-1:-1:-1;;;;;1816:31:44;;1806:42;;1796:70;;1862:1;1859;1852:12;1877:315;1945:6;1953;2006:2;1994:9;1985:7;1981:23;1977:32;1974:52;;;2022:1;2019;2012:12;1974:52;2061:9;2048:23;2080:31;2105:5;2080:31;:::i;:::-;2130:5;2182:2;2167:18;;;;2154:32;;-1:-1:-1;;;1877:315:44:o;2197:456::-;2274:6;2282;2290;2343:2;2331:9;2322:7;2318:23;2314:32;2311:52;;;2359:1;2356;2349:12;2311:52;2398:9;2385:23;2417:31;2442:5;2417:31;:::i;:::-;2467:5;-1:-1:-1;2524:2:44;2509:18;;2496:32;2537:33;2496:32;2537:33;:::i;:::-;2197:456;;2589:7;;-1:-1:-1;;;2643:2:44;2628:18;;;;2615:32;;2197:456::o;2658:247::-;2717:6;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;2825:9;2812:23;2844:31;2869:5;2844:31;:::i;3092:118::-;3178:5;3171:13;3164:21;3157:5;3154:32;3144:60;;3200:1;3197;3190:12;3215:382;3280:6;3288;3341:2;3329:9;3320:7;3316:23;3312:32;3309:52;;;3357:1;3354;3347:12;3309:52;3396:9;3383:23;3415:31;3440:5;3415:31;:::i;:::-;3465:5;-1:-1:-1;3522:2:44;3507:18;;3494:32;3535:30;3494:32;3535:30;:::i;:::-;3584:7;3574:17;;;3215:382;;;;;:::o;3602:127::-;3663:10;3658:3;3654:20;3651:1;3644:31;3694:4;3691:1;3684:15;3718:4;3715:1;3708:15;3734:1266;3829:6;3837;3845;3853;3906:3;3894:9;3885:7;3881:23;3877:33;3874:53;;;3923:1;3920;3913:12;3874:53;3962:9;3949:23;3981:31;4006:5;3981:31;:::i;:::-;4031:5;-1:-1:-1;4088:2:44;4073:18;;4060:32;4101:33;4060:32;4101:33;:::i;:::-;4153:7;-1:-1:-1;4207:2:44;4192:18;;4179:32;;-1:-1:-1;4262:2:44;4247:18;;4234:32;4285:18;4315:14;;;4312:34;;;4342:1;4339;4332:12;4312:34;4380:6;4369:9;4365:22;4355:32;;4425:7;4418:4;4414:2;4410:13;4406:27;4396:55;;4447:1;4444;4437:12;4396:55;4483:2;4470:16;4505:2;4501;4498:10;4495:36;;;4511:18;;:::i;:::-;4586:2;4580:9;4554:2;4640:13;;-1:-1:-1;;4636:22:44;;;4660:2;4632:31;4628:40;4616:53;;;4684:18;;;4704:22;;;4681:46;4678:72;;;4730:18;;:::i;:::-;4770:10;4766:2;4759:22;4805:2;4797:6;4790:18;4845:7;4840:2;4835;4831;4827:11;4823:20;4820:33;4817:53;;;4866:1;4863;4856:12;4817:53;4922:2;4917;4913;4909:11;4904:2;4896:6;4892:15;4879:46;4967:1;4962:2;4957;4949:6;4945:15;4941:24;4934:35;4988:6;4978:16;;;;;;;3734:1266;;;;;;;:::o;5005:388::-;5073:6;5081;5134:2;5122:9;5113:7;5109:23;5105:32;5102:52;;;5150:1;5147;5140:12;5102:52;5189:9;5176:23;5208:31;5233:5;5208:31;:::i;:::-;5258:5;-1:-1:-1;5315:2:44;5300:18;;5287:32;5328:33;5287:32;5328:33;:::i;5398:380::-;5477:1;5473:12;;;;5520;;;5541:61;;5595:4;5587:6;5583:17;5573:27;;5541:61;5648:2;5640:6;5637:14;5617:18;5614:38;5611:161;;5694:10;5689:3;5685:20;5682:1;5675:31;5729:4;5726:1;5719:15;5757:4;5754:1;5747:15;5611:161;;5398:380;;;:::o;6616:410::-;6818:2;6800:21;;;6857:2;6837:18;;;6830:30;6896:34;6891:2;6876:18;;6869:62;-1:-1:-1;;;6962:2:44;6947:18;;6940:44;7016:3;7001:19;;6616:410::o;7389:184::-;7459:6;7512:2;7500:9;7491:7;7487:23;7483:32;7480:52;;;7528:1;7525;7518:12;7480:52;-1:-1:-1;7551:16:44;;7389:184;-1:-1:-1;7389:184:44:o;9006:251::-;9076:6;9129:2;9117:9;9108:7;9104:23;9100:32;9097:52;;;9145:1;9142;9135:12;9097:52;9177:9;9171:16;9196:31;9221:5;9196:31;:::i;11249:245::-;11316:6;11369:2;11357:9;11348:7;11344:23;11340:32;11337:52;;;11385:1;11382;11375:12;11337:52;11417:9;11411:16;11436:28;11458:5;11436:28;:::i;11852:496::-;12031:3;12069:6;12063:13;12085:66;12144:6;12139:3;12132:4;12124:6;12120:17;12085:66;:::i;:::-;12214:13;;12173:16;;;;12236:70;12214:13;12173:16;12283:4;12271:17;;12236:70;:::i;:::-;12322:20;;11852:496;-1:-1:-1;;;;11852:496:44:o;13571:127::-;13632:10;13627:3;13623:20;13620:1;13613:31;13663:4;13660:1;13653:15;13687:4;13684:1;13677:15;13703:128;13770:9;;;13791:11;;;13788:37;;;13805:18;;:::i;13836:125::-;13901:9;;;13922:10;;;13919:36;;;13935:18;;:::i;15026:414::-;15228:2;15210:21;;;15267:2;15247:18;;;15240:30;15306:34;15301:2;15286:18;;15279:62;-1:-1:-1;;;15372:2:44;15357:18;;15350:48;15430:3;15415:19;;15026:414::o;15445:135::-;15484:3;15505:17;;;15502:43;;15525:18;;:::i;:::-;-1:-1:-1;15572:1:44;15561:13;;15445:135::o;15585:127::-;15646:10;15641:3;15637:20;15634:1;15627:31;15677:4;15674:1;15667:15;15701:4;15698:1;15691:15;15717:120;15757:1;15783;15773:35;;15788:18;;:::i;:::-;-1:-1:-1;15822:9:44;;15717:120::o;15842:112::-;15874:1;15900;15890:35;;15905:18;;:::i;:::-;-1:-1:-1;15939:9:44;;15842:112::o;15959:127::-;16020:10;16015:3;16011:20;16008:1;16001:31;16051:4;16048:1;16041:15;16075:4;16072:1;16065:15;16440:489;-1:-1:-1;;;;;16709:15:44;;;16691:34;;16761:15;;16756:2;16741:18;;16734:43;16808:2;16793:18;;16786:34;;;16856:3;16851:2;16836:18;;16829:31;;;16634:4;;16877:46;;16903:19;;16895:6;16877:46;:::i;:::-;16869:54;16440:489;-1:-1:-1;;;;;;16440:489:44:o;16934:249::-;17003:6;17056:2;17044:9;17035:7;17031:23;17027:32;17024:52;;;17072:1;17069;17062:12;17024:52;17104:9;17098:16;17123:30;17147:5;17123:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "connectWaves(address)": "9ee24a73",
    "generateSynth()": "3ccbc32e",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ticket\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_eventName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"synth\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"generator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"synthId\",\"type\":\"uint256\"}],\"name\":\"SynthMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wavesAddrs\",\"type\":\"address\"}],\"name\":\"connectWaves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generateSynth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/SynthGenerator.sol\":\"SynthGenerator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ethereum-attestation-service/eas-contracts/=node_modules/@ethereum-attestation-service/eas-contracts/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":account-abstraction/=contracts/lib/tokenbound/lib/account-abstraction/contracts/\",\":ds-test/=contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=contracts/lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc6551/=contracts/lib/tokenbound/lib/reference/src/\",\":forge-std/=contracts/lib/forge-std/src/\",\":openzeppelin-contracts/=contracts/lib/tokenbound/lib/openzeppelin-contracts/\",\":tokenbound/=contracts/lib/tokenbound/src/\"]},\"sources\":{\"contracts/src/Constants.sol\":{\"keccak256\":\"0x03c3cc3a3e4960295115748061558c2a2437faf46b8c8ad8dcf9de697d8416f3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1f350ed0a847a95df7e0b617e1e4a033701a4cb7ec2a79a5818ded5a8dc0021e\",\"dweb:/ipfs/QmPtpW7yjXWp2UPTDmEcX116zkVhNjhu4TrzQtmPJuBkZS\"]},\"contracts/src/SynthGenerator.sol\":{\"keccak256\":\"0x6287befb499707b21c4477c2f61c4a2d12e4ae24cf374030bcfd6c89f381186a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dd8293ea6b3f8a5b14894930b2524bb1a31336e248a01f1116fc62d2d9543219\",\"dweb:/ipfs/QmRxnXUtyx1u954LjWd4GHFrfvAbow3ciAGnERS6u2Qp69\"]},\"contracts/src/Ticket.sol\":{\"keccak256\":\"0x565ac1432619ffe05f403c08798cb062afbec48eaabca50a5420f0a6bee140ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://98eb733a12e08f6a6db8f96c4fbbd041f900f465b827ed8de5a4bb205287a749\",\"dweb:/ipfs/Qma8LeMRAVzwe2KNPgLy5McFDtRZwkjmNZg5j3onjwsAcB\"]},\"contracts/src/Types.sol\":{\"keccak256\":\"0x0db968e80a2518a1cef50c10d0b9556424ac81cadd598ec1ee4e9cb99d33a211\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://03d6f4b47080e193bd526555007b0e8f97456d1ee386afeb0328dc2dbd0d696d\",\"dweb:/ipfs/QmVdRUcnp8ALqAJzSHuxHtm47XSYraGCvkiCxemCVhGj3y\"]},\"contracts/src/Waves.sol\":{\"keccak256\":\"0x3064fd57f25e2b46e8192e51c2264da5d4e97af700abc45ad72e91d41e62e949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://defd0a12c35134f63f1853e3989f6bf32f6db54eb91a38b0dc2b87fe979978fa\",\"dweb:/ipfs/QmYAnpej66E4oG9zvM1Pqzp6F5bgmyaop9ojEp4YFTvd3Q\"]},\"contracts/src/interfaces/IERC6551Registry.sol\":{\"keccak256\":\"0x12169a693032d4157ab12ae324b070a227a8ba9eee46daa9990fc78ba8e8c838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38478d770ecf7a34c95ebced841bb058da6b5a4cab06e7f9b772c01e496fe0ee\",\"dweb:/ipfs/QmY1QFXxGeqGr8zQLziUkH9Pbs6hKMABH49SDjCGjK9xy1\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ticket",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_eventName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "synth",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "generator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "synthId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SynthMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_wavesAddrs",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "connectWaves"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "generateSynth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ethereum-attestation-service/eas-contracts/=node_modules/@ethereum-attestation-service/eas-contracts/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "account-abstraction/=contracts/lib/tokenbound/lib/account-abstraction/contracts/",
        "ds-test/=contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=contracts/lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc6551/=contracts/lib/tokenbound/lib/reference/src/",
        "forge-std/=contracts/lib/forge-std/src/",
        "openzeppelin-contracts/=contracts/lib/tokenbound/lib/openzeppelin-contracts/",
        "tokenbound/=contracts/lib/tokenbound/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/SynthGenerator.sol": "SynthGenerator"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/Constants.sol": {
        "keccak256": "0x03c3cc3a3e4960295115748061558c2a2437faf46b8c8ad8dcf9de697d8416f3",
        "urls": [
          "bzz-raw://1f350ed0a847a95df7e0b617e1e4a033701a4cb7ec2a79a5818ded5a8dc0021e",
          "dweb:/ipfs/QmPtpW7yjXWp2UPTDmEcX116zkVhNjhu4TrzQtmPJuBkZS"
        ],
        "license": "UNLICENSED"
      },
      "contracts/src/SynthGenerator.sol": {
        "keccak256": "0x6287befb499707b21c4477c2f61c4a2d12e4ae24cf374030bcfd6c89f381186a",
        "urls": [
          "bzz-raw://dd8293ea6b3f8a5b14894930b2524bb1a31336e248a01f1116fc62d2d9543219",
          "dweb:/ipfs/QmRxnXUtyx1u954LjWd4GHFrfvAbow3ciAGnERS6u2Qp69"
        ],
        "license": "UNLICENSED"
      },
      "contracts/src/Ticket.sol": {
        "keccak256": "0x565ac1432619ffe05f403c08798cb062afbec48eaabca50a5420f0a6bee140ab",
        "urls": [
          "bzz-raw://98eb733a12e08f6a6db8f96c4fbbd041f900f465b827ed8de5a4bb205287a749",
          "dweb:/ipfs/Qma8LeMRAVzwe2KNPgLy5McFDtRZwkjmNZg5j3onjwsAcB"
        ],
        "license": "UNLICENSED"
      },
      "contracts/src/Types.sol": {
        "keccak256": "0x0db968e80a2518a1cef50c10d0b9556424ac81cadd598ec1ee4e9cb99d33a211",
        "urls": [
          "bzz-raw://03d6f4b47080e193bd526555007b0e8f97456d1ee386afeb0328dc2dbd0d696d",
          "dweb:/ipfs/QmVdRUcnp8ALqAJzSHuxHtm47XSYraGCvkiCxemCVhGj3y"
        ],
        "license": "UNLICENSED"
      },
      "contracts/src/Waves.sol": {
        "keccak256": "0x3064fd57f25e2b46e8192e51c2264da5d4e97af700abc45ad72e91d41e62e949",
        "urls": [
          "bzz-raw://defd0a12c35134f63f1853e3989f6bf32f6db54eb91a38b0dc2b87fe979978fa",
          "dweb:/ipfs/QmYAnpej66E4oG9zvM1Pqzp6F5bgmyaop9ojEp4YFTvd3Q"
        ],
        "license": "MIT"
      },
      "contracts/src/interfaces/IERC6551Registry.sol": {
        "keccak256": "0x12169a693032d4157ab12ae324b070a227a8ba9eee46daa9990fc78ba8e8c838",
        "urls": [
          "bzz-raw://38478d770ecf7a34c95ebced841bb058da6b5a4cab06e7f9b772c01e496fe0ee",
          "dweb:/ipfs/QmY1QFXxGeqGr8zQLziUkH9Pbs6hKMABH49SDjCGjK9xy1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724",
        "urls": [
          "bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5",
          "dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9",
        "urls": [
          "bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d",
          "dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
        "urls": [
          "bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
          "dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/SynthGenerator.sol",
    "id": 521,
    "exportedSymbols": {
      "Address": [
        6299
      ],
      "Context": [
        6321
      ],
      "Counters": [
        6395
      ],
      "ERC165": [
        7116
      ],
      "ERC6551_IMPLEMENTATION_ADDRESS": [
        4
      ],
      "ERC6551_REGISTRY_ADDRESS": [
        7
      ],
      "ERC721": [
        5843
      ],
      "IERC165": [
        7128
      ],
      "IERC6551Registry": [
        1432
      ],
      "IERC721": [
        5959
      ],
      "IERC721Metadata": [
        6004
      ],
      "IERC721Receiver": [
        5977
      ],
      "Ownable": [
        3453
      ],
      "Pausable": [
        3575
      ],
      "Strings": [
        6621
      ],
      "SynthGenerator": [
        520
      ],
      "Ticket": [
        864
      ],
      "Waves": [
        1106
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2579:2",
    "nodes": [
      {
        "id": 281,
        "nodeType": "PragmaDirective",
        "src": "39:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 282,
        "nodeType": "ImportDirective",
        "src": "65:52:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 521,
        "sourceUnit": 6396,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 283,
        "nodeType": "ImportDirective",
        "src": "118:52:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 521,
        "sourceUnit": 3454,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 284,
        "nodeType": "ImportDirective",
        "src": "171:55:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 521,
        "sourceUnit": 3576,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 285,
        "nodeType": "ImportDirective",
        "src": "227:57:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 521,
        "sourceUnit": 5844,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 287,
        "nodeType": "ImportDirective",
        "src": "286:36:2",
        "nodes": [],
        "absolutePath": "contracts/src/Ticket.sol",
        "file": "./Ticket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 521,
        "sourceUnit": 865,
        "symbolAliases": [
          {
            "foreign": {
              "id": 286,
              "name": "Ticket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 864,
              "src": "294:6:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 289,
        "nodeType": "ImportDirective",
        "src": "323:34:2",
        "nodes": [],
        "absolutePath": "contracts/src/Waves.sol",
        "file": "./Waves.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 521,
        "sourceUnit": 1107,
        "symbolAliases": [
          {
            "foreign": {
              "id": 288,
              "name": "Waves",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1106,
              "src": "331:5:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 291,
        "nodeType": "ImportDirective",
        "src": "358:67:2",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IERC6551Registry.sol",
        "file": "./interfaces/IERC6551Registry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 521,
        "sourceUnit": 1433,
        "symbolAliases": [
          {
            "foreign": {
              "id": 290,
              "name": "IERC6551Registry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1432,
              "src": "366:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 294,
        "nodeType": "ImportDirective",
        "src": "426:89:2",
        "nodes": [],
        "absolutePath": "contracts/src/Constants.sol",
        "file": "./Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 521,
        "sourceUnit": 23,
        "symbolAliases": [
          {
            "foreign": {
              "id": 292,
              "name": "ERC6551_REGISTRY_ADDRESS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7,
              "src": "434:24:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 293,
              "name": "ERC6551_IMPLEMENTATION_ADDRESS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4,
              "src": "460:30:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 520,
        "nodeType": "ContractDefinition",
        "src": "517:2100:2",
        "nodes": [
          {
            "id": 310,
            "nodeType": "EventDefinition",
            "src": "576:108:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8298cce5bebc0a9d2419469172195bf3eec5f19e56b3584c835554c4312b99ee",
            "name": "SynthMinted",
            "nameLocation": "582:11:2",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "synth",
                  "nameLocation": "610:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "594:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "633:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "617:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "generator",
                  "nameLocation": "656:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "640:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "synthId",
                  "nameLocation": "675:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "667:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "593:90:2"
            }
          },
          {
            "id": 312,
            "nodeType": "VariableDeclaration",
            "src": "690:22:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ticket",
            "nameLocation": "706:6:2",
            "scope": 520,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 311,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 314,
            "nodeType": "VariableDeclaration",
            "src": "718:26:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "wavesAddrs",
            "nameLocation": "734:10:2",
            "scope": 520,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 313,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "718:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 318,
            "nodeType": "VariableDeclaration",
            "src": "750:53:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "attendeeClaimedSynth",
            "nameLocation": "783:20:2",
            "scope": 520,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 317,
              "keyType": {
                "id": 315,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "758:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "750:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 316,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "769:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 322,
            "nodeType": "UsingForDirective",
            "src": "810:36:2",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 319,
              "name": "Counters",
              "nameLocations": [
                "816:8:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6395,
              "src": "816:8:2"
            },
            "typeName": {
              "id": 321,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 320,
                "name": "Counters.Counter",
                "nameLocations": [
                  "829:8:2",
                  "838:7:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6327,
                "src": "829:16:2"
              },
              "referencedDeclaration": 6327,
              "src": "829:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$6327_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 325,
            "nodeType": "VariableDeclaration",
            "src": "852:40:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_synthIdCounter",
            "nameLocation": "877:15:2",
            "scope": 520,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$6327_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 324,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 323,
                "name": "Counters.Counter",
                "nameLocations": [
                  "852:8:2",
                  "861:7:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6327,
                "src": "852:16:2"
              },
              "referencedDeclaration": 6327,
              "src": "852:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$6327_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 347,
            "nodeType": "FunctionDefinition",
            "src": "899:167:2",
            "nodes": [],
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "998:68:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 338,
                      "name": "ticket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "1008:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 339,
                      "name": "_ticket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "1017:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1008:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:16:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 343,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "1052:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 342,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3432,
                      "src": "1034:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:25:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 334,
                    "name": "_eventName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 331,
                    "src": "977:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "53594e5448",
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "989:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a97bc5dee2c41a62af6917be5d0eae695647840f70312dee5e385b4f89a06f58",
                      "typeString": "literal_string \"SYNTH\""
                    },
                    "value": "SYNTH"
                  }
                ],
                "id": 336,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 333,
                  "name": "ERC721",
                  "nameLocations": [
                    "970:6:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5843,
                  "src": "970:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "970:27:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_ticket",
                  "nameLocation": "919:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "911:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "936:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "928:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "_eventName",
                  "nameLocation": "958:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "944:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:59:2"
            },
            "returnParameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:0:2"
            },
            "scope": 520,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 397,
            "nodeType": "FunctionDefinition",
            "src": "1072:400:2",
            "nodes": [],
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "1134:338:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 355,
                          "name": "wavesAddrs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "1152:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1174:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1166:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 356,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1166:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1152:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53796e746847656e3a20776176657320616c726561647920636f6e6e6563746564",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1178:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_757a280b208ffd181320d5a1775fec4623b19c64cd20c6de7f450b695e303696",
                          "typeString": "literal_string \"SynthGen: waves already connected\""
                        },
                        "value": "SynthGen: waves already connected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_757a280b208ffd181320d5a1775fec4623b19c64cd20c6de7f450b695e303696",
                          "typeString": "literal_string \"SynthGen: waves already connected\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1144:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:70:2"
                },
                {
                  "assignments": [
                    366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 366,
                      "mutability": "mutable",
                      "name": "waves",
                      "nameLocation": "1231:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "1225:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Waves_$1106",
                        "typeString": "contract Waves"
                      },
                      "typeName": {
                        "id": 365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 364,
                          "name": "Waves",
                          "nameLocations": [
                            "1225:5:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1106,
                          "src": "1225:5:2"
                        },
                        "referencedDeclaration": 1106,
                        "src": "1225:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Waves_$1106",
                          "typeString": "contract Waves"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 368,
                        "name": "_wavesAddrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "1245:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 367,
                      "name": "Waves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "1239:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Waves_$1106_$",
                        "typeString": "type(contract Waves)"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Waves_$1106",
                      "typeString": "contract Waves"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1225:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 372,
                              "name": "waves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "1276:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Waves_$1106",
                                "typeString": "contract Waves"
                              }
                            },
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1282:6:2",
                            "memberName": "ticket",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 906,
                            "src": "1276:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1276:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 375,
                          "name": "ticket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "1294:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1276:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53796e746847656e3a207469636b6574206d69736d61746368",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1302:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4097c3c197c147f7c6baa9712f9c050e2d9ec2b99b85e59e74cf66d028d2b432",
                          "typeString": "literal_string \"SynthGen: ticket mismatch\""
                        },
                        "value": "SynthGen: ticket mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4097c3c197c147f7c6baa9712f9c050e2d9ec2b99b85e59e74cf66d028d2b432",
                          "typeString": "literal_string \"SynthGen: ticket mismatch\""
                        }
                      ],
                      "id": 371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1268:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 383,
                                "name": "waves",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 366,
                                "src": "1362:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Waves_$1106",
                                  "typeString": "contract Waves"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1368:18:2",
                              "memberName": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2975,
                              "src": "1362:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view external returns (bytes32)"
                              }
                            },
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1362:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 386,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1390:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1394:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1390:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 381,
                            "name": "waves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1348:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Waves_$1106",
                              "typeString": "contract Waves"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1354:7:2",
                          "memberName": "hasRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3027,
                          "src": "1348:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view external returns (bool)"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1348:53:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53796e746847656e3a206f776e6572206d69736d61746368",
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1403:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c934b83ea631e0836f2849b8786b62414212796461754841797534cbbf33b2",
                          "typeString": "literal_string \"SynthGen: owner mismatch\""
                        },
                        "value": "SynthGen: owner mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c934b83ea631e0836f2849b8786b62414212796461754841797534cbbf33b2",
                          "typeString": "literal_string \"SynthGen: owner mismatch\""
                        }
                      ],
                      "id": 380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1340:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:90:2"
                },
                {
                  "expression": {
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 392,
                      "name": "wavesAddrs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "1441:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 393,
                      "name": "_wavesAddrs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "1454:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1441:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:24:2"
                }
              ]
            },
            "functionSelector": "9ee24a73",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 352,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 351,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1124:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "1124:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1124:9:2"
              }
            ],
            "name": "connectWaves",
            "nameLocation": "1081:12:2",
            "parameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "_wavesAddrs",
                  "nameLocation": "1102:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "1094:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1093:21:2"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:2"
            },
            "scope": 520,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 501,
            "nodeType": "FunctionDefinition",
            "src": "1478:999:2",
            "nodes": [],
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "1544:933:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 405,
                          "name": "wavesAddrs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "1562:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1584:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1576:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 406,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1576:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1562:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53796e746847656e3a207761766573206e6f7420636f6e6e6563746564",
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1588:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43f937d90fe204095a602284ef92b3c70867e2ab019d7f5468bf15f8d50f3d5f",
                          "typeString": "literal_string \"SynthGen: waves not connected\""
                        },
                        "value": "SynthGen: waves not connected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43f937d90fe204095a602284ef92b3c70867e2ab019d7f5468bf15f8d50f3d5f",
                          "typeString": "literal_string \"SynthGen: waves not connected\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1554:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:66:2"
                },
                {
                  "assignments": [
                    416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "ticketContract",
                      "nameLocation": "1637:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "1630:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ticket_$864",
                        "typeString": "contract Ticket"
                      },
                      "typeName": {
                        "id": 415,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 414,
                          "name": "Ticket",
                          "nameLocations": [
                            "1630:6:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 864,
                          "src": "1630:6:2"
                        },
                        "referencedDeclaration": 864,
                        "src": "1630:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ticket_$864",
                          "typeString": "contract Ticket"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 420,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "ticket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "1661:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 417,
                      "name": "Ticket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "1654:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Ticket_$864_$",
                        "typeString": "type(contract Ticket)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1654:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ticket_$864",
                      "typeString": "contract Ticket"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1630:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1712:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1716:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1712:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 422,
                              "name": "ticketContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "1687:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ticket_$864",
                                "typeString": "contract Ticket"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1702:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5094,
                            "src": "1687:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1687:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1726:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1687:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53796e746847656e3a206d757374206f776e207469636b6574",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1729:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02895117472bb992b3ca97dbdb79a16843c5f5f7f420d7b7581321fab35705fa",
                          "typeString": "literal_string \"SynthGen: must own ticket\""
                        },
                        "value": "SynthGen: must own ticket"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02895117472bb992b3ca97dbdb79a16843c5f5f7f420d7b7581321fab35705fa",
                          "typeString": "literal_string \"SynthGen: must own ticket\""
                        }
                      ],
                      "id": 421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1679:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:78:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:78:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1775:33:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 433,
                            "name": "attendeeClaimedSynth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 318,
                            "src": "1776:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 436,
                          "indexExpression": {
                            "expression": {
                              "id": 434,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1797:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1801:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1797:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1776:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53796e746847656e3a20616c726561647920636c61696d6564",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1810:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6fd907caa3c2a080529f5a135b06320e55fb4e69e06ee13eaf3a01607ceb218",
                          "typeString": "literal_string \"SynthGen: already claimed\""
                        },
                        "value": "SynthGen: already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6fd907caa3c2a080529f5a135b06320e55fb4e69e06ee13eaf3a01607ceb218",
                          "typeString": "literal_string \"SynthGen: already claimed\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1767:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:71:2"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 441,
                        "name": "attendeeClaimedSynth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "1849:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 444,
                      "indexExpression": {
                        "expression": {
                          "id": 442,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1870:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1874:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1870:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1849:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1884:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1849:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:39:2"
                },
                {
                  "assignments": [
                    449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 449,
                      "mutability": "mutable",
                      "name": "synthId",
                      "nameLocation": "1906:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "1898:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1898:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 453,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 450,
                        "name": "_synthIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "1916:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$6327_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1932:7:2",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6339,
                      "src": "1916:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$6327_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$6327_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1916:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1898:43:2"
                },
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "erc6551Registry",
                      "nameLocation": "1968:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "1951:32:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC6551Registry_$1432",
                        "typeString": "contract IERC6551Registry"
                      },
                      "typeName": {
                        "id": 455,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 454,
                          "name": "IERC6551Registry",
                          "nameLocations": [
                            "1951:16:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1432,
                          "src": "1951:16:2"
                        },
                        "referencedDeclaration": 1432,
                        "src": "1951:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC6551Registry_$1432",
                          "typeString": "contract IERC6551Registry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 460,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 458,
                        "name": "ERC6551_REGISTRY_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2003:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 457,
                      "name": "IERC6551Registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1432,
                      "src": "1986:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC6551Registry_$1432_$",
                        "typeString": "type(contract IERC6551Registry)"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC6551Registry_$1432",
                      "typeString": "contract IERC6551Registry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1951:77:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 461,
                        "name": "_synthIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "2039:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$6327_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2055:9:2",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6353,
                      "src": "2039:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$6327_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$6327_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 467,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2086:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2090:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2086:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 469,
                        "name": "synthId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "2098:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 466,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5458,
                        5487
                      ],
                      "referencedDeclaration": 5458,
                      "src": "2076:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:30:2"
                },
                {
                  "assignments": [
                    473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "synth",
                      "nameLocation": "2124:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 500,
                      "src": "2116:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2116:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 486,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 476,
                        "name": "ERC6551_IMPLEMENTATION_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "2162:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2194:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 480,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2205:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SynthGenerator_$520",
                              "typeString": "contract SynthGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SynthGenerator_$520",
                              "typeString": "contract SynthGenerator"
                            }
                          ],
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2197:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2197:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2197:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 482,
                        "name": "synthId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "2212:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2221:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2224:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 474,
                        "name": "erc6551Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "2132:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC6551Registry_$1432",
                          "typeString": "contract IERC6551Registry"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2148:13:2",
                      "memberName": "createAccount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1415,
                      "src": "2132:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (address,uint256,address,uint256,uint256,bytes memory) external returns (address)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:95:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2116:111:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 488,
                        "name": "synth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "2405:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 489,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2412:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2416:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2412:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 493,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2432:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SynthGenerator_$520",
                              "typeString": "contract SynthGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SynthGenerator_$520",
                              "typeString": "contract SynthGenerator"
                            }
                          ],
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2424:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 491,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2424:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2424:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 495,
                        "name": "synthId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "2439:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 487,
                      "name": "SynthMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "2393:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2393:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "EmitStatement",
                  "src": "2388:59:2"
                },
                {
                  "expression": {
                    "id": 498,
                    "name": "synth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 473,
                    "src": "2465:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 403,
                  "id": 499,
                  "nodeType": "Return",
                  "src": "2458:12:2"
                }
              ]
            },
            "functionSelector": "3ccbc32e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 400,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 399,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "1512:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3502,
                  "src": "1512:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1512:13:2"
              }
            ],
            "name": "generateSynth",
            "nameLocation": "1487:13:2",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1500:2:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "1535:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1534:9:2"
            },
            "scope": 520,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 510,
            "nodeType": "FunctionDefinition",
            "src": "2483:61:2",
            "nodes": [],
            "body": {
              "id": 509,
              "nodeType": "Block",
              "src": "2519:25:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 506,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3558,
                      "src": "2529:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2529:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:8:2"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 503,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2509:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "2509:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2509:9:2"
              }
            ],
            "name": "pause",
            "nameLocation": "2492:5:2",
            "parameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2497:2:2"
            },
            "returnParameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2519:0:2"
            },
            "scope": 520,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 519,
            "nodeType": "FunctionDefinition",
            "src": "2550:65:2",
            "nodes": [],
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "2588:27:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 515,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3574,
                      "src": "2598:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:10:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:10:2"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 513,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 512,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2578:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "2578:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2578:9:2"
              }
            ],
            "name": "unpause",
            "nameLocation": "2559:7:2",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2566:2:2"
            },
            "returnParameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:2"
            },
            "scope": 520,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 295,
              "name": "ERC721",
              "nameLocations": [
                "544:6:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5843,
              "src": "544:6:2"
            },
            "id": 296,
            "nodeType": "InheritanceSpecifier",
            "src": "544:6:2"
          },
          {
            "baseName": {
              "id": 297,
              "name": "Pausable",
              "nameLocations": [
                "552:8:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3575,
              "src": "552:8:2"
            },
            "id": 298,
            "nodeType": "InheritanceSpecifier",
            "src": "552:8:2"
          },
          {
            "baseName": {
              "id": 299,
              "name": "Ownable",
              "nameLocations": [
                "562:7:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3453,
              "src": "562:7:2"
            },
            "id": 300,
            "nodeType": "InheritanceSpecifier",
            "src": "562:7:2"
          }
        ],
        "canonicalName": "SynthGenerator",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          520,
          3453,
          3575,
          5843,
          6004,
          5959,
          7116,
          7128,
          6321
        ],
        "name": "SynthGenerator",
        "nameLocation": "526:14:2",
        "scope": 521,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 2
}