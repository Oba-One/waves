# WAVES TYPES
type SynthWaveNFT @entity {
  id: Bytes! # Set to `waveNft.id.concat(synthNft.id)`
  synthNft: SynthNFT! # SynthNFT id
  waveNft: WaveNFT! # WaveNFT id
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WaveNFT @entity(immutable: true) {
  id: Bytes! # address
  # contract: Bytes!
  artist: Bytes! # address
  creative: Bytes! # address
  name: String! # string
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!

  synthNfts: [SynthWaveNFT!]! @derivedFrom(field: "waveNft")
}

type SynthNFT @entity(immutable: true) {
  id: Bytes! # address
  nftOwnershipRequired: Boolean! # bool
  # contract: Bytes!
  artist: Bytes! # address
  organizer: Bytes! # address
  name: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!

  waveNFTs: [SynthWaveNFT!]! @derivedFrom(field: "synthNft")
}

type SynthWave @entity {
  id: Bytes! # Set to `wave.id.concat(synth.id)`
  synth: Synth! # Synth
  wave: Wave! # Wave
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Synth @entity(immutable: true) {
  id: Bytes! # address
  owner: Bytes! # address
  # account: Bytes!
  contract: Bytes! # address
  tokenId: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!

  waves: [SynthWave!]! @derivedFrom(field: "synth")
}

type Wave @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  contract: Bytes! # address
  tokenId: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!

  synths: [SynthWave!]! @derivedFrom(field: "wave")
}

# REGISTRY TYPES
type AdminChanged @entity(immutable: true) {
  id: Bytes!
  contract: Bytes! # address
  previousAdmin: Bytes! # address
  newAdmin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  contract: Bytes! # address
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Upgraded @entity(immutable: true) {
  id: Bytes!
  contract: Bytes! # address
  implementation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BeaconUpgraded @entity(immutable: true) {
  id: Bytes!
  contract: Bytes! # address
  beacon: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  contract: Bytes! # address
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  contract: Bytes! # address
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
